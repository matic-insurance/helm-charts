---
# Source: application-component/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: myproduct-websocket
  labels:
    app.kubernetes.io/name: myproduct
    app.kubernetes.io/instance: myproduct-websocket
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: websocket
    app.kubernetes.io/part-of: myproduct
    app.kubernetes.io/version: "0.0.0"
spec:
  replicas: 2
  minReadySeconds: 1
  progressDeadlineSeconds: 120
  revisionHistoryLimit: 5
  strategy:
    rollingUpdate:
      maxSurge: 3
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: myproduct
      app.kubernetes.io/instance: myproduct-websocket
  template:
    metadata:
      annotations:
        rollme: "123abc"
        test: true
      labels:
        app.kubernetes.io/name: myproduct
        app.kubernetes.io/instance: myproduct-websocket
        app.kubernetes.io/component: websocket
        app.kubernetes.io/version: 0.0.0
        sidecar.istio.io/inject: "true"
    spec:
      serviceAccountName: myproduct
      dnsPolicy: ClusterFirst
      dnsConfig:
        options:
        - name: ndots
          value: "1"
      terminationGracePeriodSeconds: 30
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      containers:
        - name: myproduct-websocket
          image: "bitnami/ruby:0.0.0"
          command:
            - "sh"
            - "-c"
            - "until wget --quiet --spider -o /dev/null http://localhost:15020/healthz/ready; do echo 'Waiting for Istio...'; sleep 1; done; echo 'Istio ready. Running the command...';puma -p 9292"
          imagePullPolicy: IfNotPresent
          env:
            - name: MY_APP
              value: IS_TEST
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          envFrom:
            - secretRef:
                name: test-secret-envvars
          volumeMounts:
            - name: dynamic-sa-token
              mountPath: /var/run/secrets/tokens
              readOnly: true
            - mountPath: /cache
              name: cache-vol
          lifecycle:
            preStop:
              exec:
                command:
                  - "sh"
                  - "-c"
                  - "echo 'Waiting for Application exit'; kill 1; wait 1; echo 'Application finished. Telling Istio to exit'; wget -quiet --post-data 'exit' -o /dev/null http://localhost:15020/quitquitquit"
          
          startupProbe:
            exec:
              command: [/app/ops/scripts/check_sidekiq.sh]
            initialDelaySeconds: 1
            timeoutSeconds: 5
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 40
          resources:
            limits:
              cpu: 1200m
              memory: 1500Mi
            requests:
              cpu: 400m
              memory: 500Mi
      volumes:
        - name: dynamic-sa-token
          projected:
            sources:
              - serviceAccountToken:
                  path: dynamic-sa-token
                  expirationSeconds: 600
        - emptyDir: {}
          name: cache-vol