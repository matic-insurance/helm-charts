---
# Source: application-component/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: myproduct-webserver
  labels:
    app.kubernetes.io/name: myproduct
    app.kubernetes.io/instance: myproduct-webserver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: webserver
    app.kubernetes.io/part-of: myproduct
    app.kubernetes.io/version: "0.0.0"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: myproduct
      app.kubernetes.io/instance: myproduct-webserver
  template:
    metadata:
      labels:
        app.kubernetes.io/name: myproduct
        app.kubernetes.io/instance: myproduct-webserver
    spec:
      serviceAccountName: myproduct
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      containers:
        - name: application-component
          image: "bitnami/ruby:0.0.0"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            limits:
              cpu: 400m
              memory: 512Mi
            requests:
              cpu: 200m
              memory: 256Mi
      nodeSelector:
        disktype: ssd
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: another-node-label-key
                operator: In
                values:
                - another-node-label-value
            weight: 1
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: topology.kubernetes.io/zone
                operator: In
                values:
                - antarctica-east1
                - antarctica-west1
      tolerations:
        - effect: NoSchedule
          key: key1
          operator: Equal
          value: value1
        - effect: NoExecute
          key: key2
          operator: Equal
          value: value2
      topologySpreadConstraints:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/instance: myproduct-webserver
          maxSkew: 1
          topologyKey: lifecycle
          whenUnsatisfiable: DoNotSchedule