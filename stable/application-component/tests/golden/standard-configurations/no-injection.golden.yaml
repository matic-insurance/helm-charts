---
# Source: application-component/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: olb-webserver
  labels:
    app.kubernetes.io/name: olb
    app.kubernetes.io/instance: olb-webserver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: webserver
    app.kubernetes.io/part-of: olb
    app.kubernetes.io/version: "release-1.2.3"
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 9292
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: olb
    app.kubernetes.io/instance: olb-webserver
---
# Source: application-component/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: olb-webserver
  labels:
    app.kubernetes.io/name: olb
    app.kubernetes.io/instance: olb-webserver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: webserver
    app.kubernetes.io/part-of: olb
    app.kubernetes.io/version: "release-1.2.3"
    tags.datadoghq.com/env: production
    tags.datadoghq.com/service: olb
    tags.datadoghq.com/version: "release-1.2.3"
spec:
  minReadySeconds: 1
  progressDeadlineSeconds: 120
  revisionHistoryLimit: 5
  strategy:
    rollingUpdate:
      maxSurge: 3
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: olb
      app.kubernetes.io/instance: olb-webserver
  template:
    metadata:
      annotations:
        rollme: "123abc"
        ad.datadoghq.com/olb-webserver.logs: '[{"source": "ruby"}]'
      labels:
        app.kubernetes.io/name: olb
        app.kubernetes.io/instance: olb-webserver
        app.kubernetes.io/component: webserver
        app.kubernetes.io/version: release-1.2.3
        tags.datadoghq.com/env: production
        tags.datadoghq.com/service: olb
        tags.datadoghq.com/version: "release-1.2.3"
    spec:
      serviceAccountName: olb
      dnsPolicy: ClusterFirst
      dnsConfig:
        options:
        - name: ndots
          value: "1"
      terminationGracePeriodSeconds: 45
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      containers:
        - name: olb-webserver
          image: "matic/olb:release-1.2.3"
          command:
            - "sh"
            - "-c"
            - "bundle exec puma -t 8:8"
          ports:
            - containerPort: 9292
          imagePullPolicy: IfNotPresent
          env:
            - name: DD_AGENT_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: DD_TRACE_AGENT_PORT
              value: "8126"
            - name: DD_DOGSTATSD_PORT
              value: "8125"
            - name: DD_ENV
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/env']
            - name: DD_SERVICE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/service']
            - name: DD_VERSION
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/version']
            - name: DD_ENTITY_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.uid
            - name: DD_TAGS
              value: "product:olb,element:webserver"
            - name: DD_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: SENTRY_RELEASE
              value: "olb-release-1.2.3"
            - name: SENTRY_ENVIRONMENT
              value: production
          envFrom:
            - secretRef:
                name: olb-configs-environment
          volumeMounts:
            - name: dynamic-sa-token
              mountPath: /var/run/secrets/tokens
              readOnly: true
            - name: olb-configs-runtime
              mountPath: "/app/config/app_settings.local.yml"
              subPath: "app_settings"
              readOnly: true
          startupProbe:
            httpGet:
              path: /healthz/webserver
              port: 9292
            initialDelaySeconds: 1
            timeoutSeconds: 5
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 40
          readinessProbe:
            httpGet:
              path: /healthz/webserver
              port: 9292
            initialDelaySeconds: 0
            timeoutSeconds: 10
            periodSeconds: 15
            successThreshold: 1
            failureThreshold: 4
          livenessProbe:
            httpGet:
              path: /healthz/webserver
              port: 9292
            initialDelaySeconds: 60
            timeoutSeconds: 20
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 4
          resources:
            limits:
              cpu: 1800m
              memory: 2100Mi
            requests:
              cpu: 600m
              memory: 700Mi
      volumes:
        - name: dynamic-sa-token
          projected:
            sources:
              - serviceAccountToken:
                  path: dynamic-sa-token
                  expirationSeconds: 600
        - name: olb-configs-runtime
          secret:
            secretName: olb-configs-runtime
      topologySpreadConstraints:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/name: olb
              app.kubernetes.io/instance: olb-webserver
              app.kubernetes.io/version: release-1.2.3
          maxSkew: 2
          topologyKey: eks.amazonaws.com/capacityType
          whenUnsatisfiable: DoNotSchedule
        - labelSelector:
            matchLabels:
              app.kubernetes.io/name: olb
              app.kubernetes.io/instance: olb-webserver
              app.kubernetes.io/version: release-1.2.3
          maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
        - labelSelector:
            matchLabels:
              app.kubernetes.io/name: olb
              app.kubernetes.io/instance: olb-webserver
              app.kubernetes.io/version: release-1.2.3
          maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
---
# Source: application-component/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: olb-webserver-ingress-internal-0
  annotations:
    kubernetes.io/ingress.class: "internal"
    external-dns.alpha.kubernetes.io/ttl: "60"
    nginx.ingress.kubernetes.io/load-balance: "ewma"
    nginx.ingress.kubernetes.io/proxy-body-size: "256m"
    nginx.ingress.kubernetes.io/proxy-next-upstream: "error timeout non_idempotent"
    nginx.ingress.kubernetes.io/proxy-next-upstream-tries: "8"
    nginx.ingress.kubernetes.io/ssl-ciphers: "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384"
    external-dns.alpha.kubernetes.io/hostname: "olb.matic.link"
    nginx.ingress.kubernetes.io/configuration-snippet: |
        opentracing_tag "service.name" "olb-nginx";
        proxy_set_header X-Request-Start "t=${msec}";
  labels:
    app.kubernetes.io/name: olb
    app.kubernetes.io/instance: olb-webserver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: webserver
    app.kubernetes.io/part-of: olb
    app.kubernetes.io/version: "release-1.2.3"
spec:
  rules:
    - host: olb.matic.link
      http:
        paths:
          - backend:
              service:
                name: olb-webserver
                port:
                  number: 80
            path: /
            pathType: Prefix
  tls:
    - hosts:
        - olb.matic.link
      secretName: matic.link-tls
---
# Source: application-component/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: olb-webserver-ingress-external-1
  annotations:
    kubernetes.io/ingress.class: "external"
    external-dns.alpha.kubernetes.io/ttl: "60"
    nginx.ingress.kubernetes.io/load-balance: "ewma"
    nginx.ingress.kubernetes.io/proxy-body-size: "256m"
    nginx.ingress.kubernetes.io/proxy-next-upstream: "error timeout non_idempotent"
    nginx.ingress.kubernetes.io/proxy-next-upstream-tries: "8"
    nginx.ingress.kubernetes.io/ssl-ciphers: "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384"
    external-dns.alpha.kubernetes.io/hostname: "olb.matic.com"
    nginx.ingress.kubernetes.io/server-snippet: |
      location /admin { deny all; }
    nginx.ingress.kubernetes.io/configuration-snippet: |
        opentracing_tag "service.name" "olb-nginx";
        proxy_set_header X-Request-Start "t=${msec}";
  labels:
    app.kubernetes.io/name: olb
    app.kubernetes.io/instance: olb-webserver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: webserver
    app.kubernetes.io/part-of: olb
    app.kubernetes.io/version: "release-1.2.3"
spec:
  rules:
    - host: olb.matic.com
      http:
        paths:
          - backend:
              service:
                name: olb-webserver
                port:
                  number: 80
            path: /
            pathType: Prefix
  tls:
    - hosts:
        - olb.matic.com
      secretName: matic.com-tls
---
# Source: application-component/templates/datadog-metric.yaml
apiVersion: datadoghq.com/v1alpha1
kind: DatadogMetric
metadata:
  name: olb-requests-per-second
  labels:
    app.kubernetes.io/name: olb
    app.kubernetes.io/instance: olb-webserver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: webserver
    app.kubernetes.io/part-of: olb
    app.kubernetes.io/version: "release-1.2.3"
spec:
  query: ewma_10(avg:nginx_ingress.controller.requests{service:olb-webserver}.as_count().rollup(avg, 60))
---
# Source: application-component/templates/pdb.yml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: olb-webserver
  labels:
    app.kubernetes.io/name: olb
    app.kubernetes.io/instance: olb-webserver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: webserver
    app.kubernetes.io/part-of: olb
    app.kubernetes.io/version: "release-1.2.3"
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "1"
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: olb
      app.kubernetes.io/instance: olb-webserver
---
# Source: application-component/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: olb
  labels:
    app.kubernetes.io/name: olb
    app.kubernetes.io/instance: olb-webserver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: webserver
    app.kubernetes.io/part-of: olb
    app.kubernetes.io/version: "release-1.2.3"
  annotations:
    "helm.sh/hook": pre-install
    "helm.sh/hook-weight": "-10"
    "helm.sh/resource-policy": keep
---
# Source: application-component/templates/hpa.yaml
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: olb-webserver
  labels:
    app.kubernetes.io/name: olb
    app.kubernetes.io/instance: olb-webserver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: webserver
    app.kubernetes.io/part-of: olb
    app.kubernetes.io/version: "release-1.2.3"
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "2"
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: olb-webserver
  minReplicas: 2
  maxReplicas: 4
  metrics:
    - type: External
      external:
        metric:
          name: "datadogmetric@app-component-test00000:olb-requests-per-second"
        target:
          averageValue: 12000m
          type: AverageValue
  behavior:
    scaleDown:
      policies:
      - periodSeconds: 180
        type: Pods
        value: 1
      stabilizationWindowSeconds: 60
    scaleUp:
      policies:
      - periodSeconds: 60
        type: Pods
        value: 2
      stabilizationWindowSeconds: 15