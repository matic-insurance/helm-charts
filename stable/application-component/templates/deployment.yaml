apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "application-component.fullname" . }}
  labels:
    {{- include "application-component.labels" . | nindent 4 }}
    {{- if .Values.datadog.enabled }}
    {{- include "application-component.datadog-labels" . | nindent 4 }}
    {{- end }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.pod.replicas }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "application-component.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        rollme: {{ randAlphaNum 5 | quote }}
        {{- with .Values.pod.annotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "application-component.selectorLabels" . | nindent 8 }}
        {{- if .Values.datadog.enabled }}
        {{- include "application-component.datadog-labels" . | nindent 8 }}
        {{- end }}
    spec:
      {{- if .Values.image.pullSecret }}
      imagePullSecrets:
        - name: {{ .Values.image.pullSecret }}
      {{- end }}
      serviceAccountName: {{ include "application-component.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.pod.securityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Values.version }}"
          {{- if .Values.pod.command }}
          command: ["sh","-c","{{ .Values.pod.command }}"]
          {{- end }}
          {{- if .Values.service.enabled }}
          ports:
            - containerPort: {{ .Values.service.port }}
          {{- end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- with .Values.pod.env }}
          env:
{{ toYaml . | indent 12 }}
          {{- end }}
          {{- with .Values.pod.envFrom }}
          envFrom:
{{ toYaml . | indent 12 }}
          {{- end }}
          {{- with .Values.pod.volumeMounts }}
          volumeMounts:
{{ toYaml . | indent 12 }}
          {{- end }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.pod.resources | nindent 12 }}
      {{- with .Values.pod.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.pod.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.pod.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.pod.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
      {{- end }}
