apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "application-helpers.fullname" . }}
  labels:
    {{- include "application-helpers.labels" . | nindent 4 }}
    {{- if .Values.global.applicationMonitoring.datadog }}
    {{- include "application-helpers.monitoring.datadog.labels" . | nindent 4 }}
    {{- end }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.deployment.replicas }}
  {{- end }}
  minReadySeconds: {{ .Values.deployment.minReadySeconds }}
  progressDeadlineSeconds: {{ .Values.deployment.progressDeadlineSeconds }}
  revisionHistoryLimit: {{ .Values.deployment.revisionHistoryLimit }}
  strategy:
    {{- toYaml .Values.deployment.strategy | nindent 4 }}
  selector:
    matchLabels:
      {{- include "application-helpers.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        rollme: {{ randAlphaNum 5 | quote }}
        {{- with .Values.deployment.annotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "application-helpers.selectorLabels" . | nindent 8 }}
        {{- if .Values.global.applicationMonitoring.datadog }}
        {{- include "application-helpers.monitoring.datadog.labels" . | nindent 8 }}
        {{- end }}
    spec:
      {{- if .Values.global.applicationImage.pullSecret }}
      imagePullSecrets:
        - name: {{ .Values.global.applicationImage.pullSecret }}
      {{- end }}
      serviceAccountName: {{ include "application-helpers.serviceAccountName" . }}
      dnsPolicy: {{ .Values.deployment.dnsPolicy }}
      terminationGracePeriodSeconds: {{ .Values.deployment.terminationGracePeriodSeconds }}
      securityContext:
        {{- toYaml .Values.deployment.securityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.global.applicationImage.repository }}:{{ default .Values.global.application.version .Values.global.applicationImage.tag }}"
          {{- if .Values.command }}
          command: ["sh","-c",{{ .Values.command | quote }}]
          {{- end }}
          {{- if .Values.service.enabled }}
          ports:
            - containerPort: {{ .Values.service.port }}
          {{- end }}
          imagePullPolicy: {{ .Values.global.applicationImage.pullPolicy }}
          {{- if or .Values.global.applicationMonitoring.datadog .Values.global.applicationMonitoring.sentry .Values.deployment.env }}
          env:
          {{- if .Values.global.applicationMonitoring.datadog }}
          {{- include "application-helpers.monitoring.datadog.env" . | nindent 12 }}
          {{- end }}
          {{- if .Values.global.applicationMonitoring.sentry }}
          {{- include "application-helpers.monitoring.sentry.env" . | nindent 12 }}
          {{- end }}
          {{- with .Values.deployment.env }}
          {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- end }}
          {{- if or .Values.global.application.environmentVariables .Values.deployment.envFrom }}
          envFrom:
          {{- with .Values.global.application.environmentVariables }}
            - secretRef:
                name: {{ include "application-helpers.configs.environment-variables.volume-name" $ }}
          {{- end }}
          {{- with .Values.deployment.envFrom }}
          {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- end }}
          {{- if or .Values.global.application.configFiles .Values.deployment.volumeMounts }}
          volumeMounts:
          {{- with .Values.global.application.configFiles }}
          {{- range $name, $path := . }}
            - name: {{ include "application-helpers.configs.files-runtime.volume-name" $ }}
              mountPath: {{ $path | quote }}
              subPath: {{ $name | quote }}
              readOnly: true
          {{- end }}
          {{- end }}
          {{- with .Values.deployment.volumeMounts }}
          {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- end }}
          {{- if .Values.deployment.startupProbe.enabled }}
          startupProbe:
            {{- if .Values.deployment.startupProbe.command }}
            exec:
              command: {{ .Values.deployment.startupProbe.command }}
            {{- else }}
            httpGet:
              path: {{ .Values.deployment.startupProbe.path }}
              port: {{ .Values.deployment.port }}
            {{- end}}
            initialDelaySeconds: {{ .Values.deployment.startupProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.deployment.startupProbe.timeoutSeconds }}
            periodSeconds: {{ .Values.deployment.startupProbe.periodSeconds }}
            successThreshold: {{ .Values.deployment.startupProbe.successThreshold }}
            failureThreshold: {{ .Values.deployment.startupProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.deployment.readinessProbe.enabled }}
          readinessProbe:
            {{- if .Values.deployment.readinessProbe.command }}
            exec:
              command: {{ .Values.deployment.readinessProbe.command }}
            {{- else }}
            httpGet:
              path: {{ .Values.deployment.readinessProbe.path }}
              port: {{ .Values.deployment.port }}
            {{- end}}
            initialDelaySeconds: {{ .Values.deployment.readinessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.deployment.readinessProbe.timeoutSeconds }}
            periodSeconds: {{ .Values.deployment.readinessProbe.periodSeconds }}
            successThreshold: {{ .Values.deployment.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.deployment.readinessProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.deployment.livenessProbe.enabled }}
          livenessProbe:
            {{- if .Values.deployment.livenessProbe.command }}
            exec:
              command: {{ .Values.deployment.livenessProbe.command }}
            {{- else }}
            httpGet:
              path: {{ .Values.deployment.livenessProbe.path }}
              port: {{ .Values.deployment.port }}
            {{- end}}
            initialDelaySeconds: {{ .Values.deployment.livenessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.deployment.livenessProbe.timeoutSeconds }}
            periodSeconds: {{ .Values.deployment.livenessProbe.periodSeconds }}
            successThreshold: {{ .Values.deployment.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.deployment.livenessProbe.failureThreshold }}
          {{- end }}
          resources:
            {{- if kindIs "string" .Values.deployment.resources }}
            {{- toYaml (get .Values.defaults.resources .Values.deployment.resources) | nindent 12 }}
            {{- else }}
            {{- toYaml .Values.deployment.resources | nindent 12 }}
            {{- end }}
      {{- if or .Values.deployment.volumes .Values.global.application.configFiles }}
      volumes:
      {{- with .Values.global.application.configFiles }}
        - name: {{ include "application-helpers.configs.files-runtime.volume-name" $ }}
          secret:
            secretName: {{ include "application-helpers.configs.files-runtime.volume-name" $ }}
      {{- end }}
      {{- with .Values.deployment.volumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- end }}
      {{- with .Values.deployment.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.deployment.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.deployment.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.deployment.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
      {{- end }}
