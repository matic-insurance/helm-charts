{{ if (and .Values.service.enabled .Values.ingress.enabled) }}
{{- range $index, $ingress := .Values.ingress.list }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "application-component.fullname" $ }}-ingress-{{ $ingress.type }}-{{ $index }}
  annotations:
    kubernetes.io/ingress.class: {{ $ingress.type | quote  }}
    {{- range $key, $value := $ingress.annotations }}
    {{ $key }}: {{ $value | quote }}
    {{- end }}
    {{- if or $ingress.deny_locations $ingress.server_snippet }}
    nginx.ingress.kubernetes.io/server-snippet: |
    {{- if $ingress.deny_locations }}
    {{- range $ingress.deny_locations }}
      location {{ . }} { deny all; }
    {{- end }}
    {{- end }}
    {{- if $ingress.server_snippet }}
{{ toYaml $ingress.server_snippet | trimAll "|" | indent 4 }}
    {{- end }}
    {{- end }}
  labels:
    {{- include "application-component.labels" $ | nindent 4 }}
spec:
  rules:
    - host: {{ $ingress.host }}
      http:
        paths:
          - backend:
              service:
                name: {{ include "application-component.fullname" $ }}
                port:
                  number: {{ $.Values.service.port }}
            path: {{ default "/" $ingress.path }}
            pathType: {{ default "Prefix" $ingress.pathType }}
{{- if $ingress.tls }}
  tls:
    - hosts:
        - {{ $ingress.host }}
      secretName: {{ $ingress.tls }}
{{- end }}
{{ end }}
{{- end }}
